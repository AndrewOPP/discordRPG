import asyncio
from random import randint

from discord import Interaction, Embed, Colour

from src.data.model_enemy import Enemy
from src.data.model_user import User
from src.utils import create_embed
from src.logs import getLogger

logger = getLogger("Fight")


class Battle:
    def __init__(self, player: User, enemy):
        # TODO –ì–æ–±–ª–∏–Ω –º–æ–∂–µ—Ç —Å–±–µ–∂–∞—Ç—å –ø—Ä–∏ –Ω–∏–∑–∫–æ–º —Ö–ø –∏ –±—É–¥–µ—Ç –ø–æ–±–µ–¥–∞
        # TODO –ù–∞–≥—Ä–∞–¥—ã –∑–∞ –±–æ–π –æ—Ç —Å–∫–µ–π–ª–∞ —É—Ä–æ–≤–Ω—è –≥–æ–±–ª–∏–Ω–∞
        self.player: User = player
        self.enemy: Enemy = enemy
        self.turn: str = "player"
        self.round_num: int = 1
        self.last_battle_log: str = None
        self.end_fight = False

    def finish_the_fight(self):
        if self.turn == "player":
            log_text = f"–õ–æ–≥: üë§ –í–∞—à —É–¥–∞—Ä —Å–æ–∫—Ä—É—à–∞–µ—Ç –≥–æ–±–ª–∏–Ω–∞!"
            logger.debug(f"{log_text} –ó–¥–æ—Ä–æ–≤—å–µ –≥–æ–±–ª–∏–Ω–∞: {self.enemy.hp}/{self.enemy.max_hp}")

        else:
            log_text = f"–õ–æ–≥: üëπ –£–¥–∞—Ä –≥–æ–±–ª–∏–Ω–∞ —Ä–∞–∑–º–∞–∑–∞–ª –≤–∞—Å –ø–æ —Å—Ç–µ–Ω–∫–µ!"
            logger.debug(f"{log_text} –ó–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞: {self.player.hp}/{self.player.max_hp}")

        self.last_battle_log = log_text
        self.end_fight = True

        # TODO –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—ã–¥–∞—á–∏ –Ω–∞–≥—Ä–∞–¥—ã –∏ —Å–æ—Ö—Ä–µ–Ω–µ–Ω–∏–µ –≤ –±–¥
        # TODO + coins

    def player_attack(self, button):
        button.disabled = True
        self.enemy.hp -= self.player.damage
        if self.enemy.is_alive():
            self.turn = "enemy"
            self.round_num += 1

            log_text = f"–õ–æ–≥: üë§ –í–∞—à —É–¥–∞—Ä –ø–æ –≥–æ–±–ª–∏–Ω—É –Ω–∞ {self.player.damage} —É—Ä–æ–Ω–∞"
            logger.debug(f"{log_text} –ó–¥–æ—Ä–æ–≤—å–µ –≥–æ–±–ª–∏–Ω–∞: {self.enemy.hp}/{self.enemy.max_hp}")
            self.last_battle_log = log_text
            return

        self.finish_the_fight()

    def enemy_attack(self, button):
        button.disabled = False
        self.player.hp -= self.enemy.damage
        if self.player.is_alive():
            self.turn = "player"
            self.round_num += 1

            log_text = f"–õ–æ–≥: üëπ –£–¥–∞—Ä –≥–æ–±–ª–∏–Ω–∞ –ø–æ –≤–∞–º –Ω–∞ {self.enemy.damage} —É—Ä–æ–Ω–∞"
            logger.debug(f"{log_text} –ó–¥–æ—Ä–æ–≤—å–µ –∏–≥—Ä–æ–∫–∞: {self.player.hp}/{self.player.max_hp}")
            self.last_battle_log = log_text
            return

        self.finish_the_fight()

    def create_embed_finish_battle(self) -> Embed:
        if self.turn == "player":
            embed = Embed(
                title="üèÅ –ë–∏—Ç–≤–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!",
                description=f"`üë§` **–ò–≥—Ä–æ–∫: {self.player.username}** –ø–æ–≤–µ—Ä–≥ **{self.enemy.name}** –Ω–∞ {self.round_num} —Ä–∞—É–Ω–¥–µ!",
                color=Colour.dark_green())
            embed.add_field(name="`üíñ` –û—Å—Ç–∞–≤—à–µ–µ—Å—è HP", value=f"{self.player.hp}/{self.player.max_hp}")
            embed.add_field(name="`‚ú®` –ü–æ–ª—É—á–µ–Ω–æ –æ–ø—ã—Ç–∞", value=f"0 XP")
            embed.add_field(name="`üí∞` –ü–æ–ª—É—á–µ–Ω–æ –∑–æ–ª–æ—Ç–∞", value=f"0 –º–æ–Ω–µ—Ç")
            embed.set_footer(text=self.last_battle_log)
            return embed
        else:
            embed = Embed(
                title="üèÅ –ë–∏—Ç–≤–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!",
                description=f"`üëπ` **–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫: {self.enemy.name}** –∏–∑–±–∏–ª **{self.player.username}** –Ω–∞ {self.round_num} —Ä–∞—É–Ω–¥–µ!\n"
                            "–ü–æ–∑–æ—Ä... –º–æ–∂–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ —Ö–æ—Ç—è –±—ã —É–∫—É—Å–∏—à—å –≤ –æ—Ç–≤–µ—Ç?\n\n"
                            "–í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –±—É–¥–µ—à—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Ç–∞—Ä–∞–∫–∞–Ω–∞—Ö, —á–µ–ª—è–¥—å...",
                color=Colour.dark_red())
            embed.add_field(name="`üíñ` –û—Å—Ç–∞–≤—à–µ–µ—Å—è HP –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞", value=f"{self.enemy.hp}/{self.enemy.max_hp}")
            embed.set_footer(text=self.last_battle_log)
            return embed

    def create_embed_battle(self, progress_bar=None) -> Embed:
        start_title = f"‚öîÔ∏è –ë–∏—Ç–≤–∞ –Ω–∞—á–∞–ª–∞—Å—å! –¢–≤–æ–π —Ö–æ–¥! –†–∞—É–Ω–¥ {self.round_num}"
        start_footer = "–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –∞—Ç–∞–∫–∏ –∏–ª–∏ –∑–∞—â–∏—Ç—ã."
        turn = "–ë–µ–π—Å—è! –í–∞—à —Ö–æ–¥!" if self.turn == "player" else "–•–æ–¥–∏—Ç –≥–æ–±–ª–∏–Ω!"
        title = f"‚öîÔ∏è {turn} –†–∞—É–Ω–¥ {self.round_num}"
        color = Colour.dark_green() if self.turn == "player" else Colour.dark_red()

        embed = Embed(
            title=start_title if not self.last_battle_log else title,
            description=None if not progress_bar else "".join(progress_bar),
            color=color)

        embed.add_field(
            name=f"`üë§` –ò–≥—Ä–æ–∫: {self.player.username}| lvl: {self.player.lvl}",
            value=(
                f"**HP:** {self.player.hp}/{self.player.max_hp}\n"
                f"**–£—Ä–æ–Ω:** {self.player.damage}"),
            inline=False)

        embed.add_field(
            name=f"`üëπ` –í—Ä–∞–≥: {self.enemy.name} | lvl: {self.enemy.lvl}",
            value=(
                f"**HP:** {self.enemy.hp}/{self.enemy.max_hp}\n"
                f"**–£—Ä–æ–Ω:** {self.enemy.damage}"),
            inline=False)

        embed.set_footer(text=self.last_battle_log if self.last_battle_log else start_footer)
        return embed
