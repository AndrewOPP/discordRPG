import math
import random

from discord import Embed, Colour

from src.data.db import db
from src.data.model_user import User


class Shop:
    #  TODO –ö–û–ì–î–ê –ù–ï–î–û–°–¢–ê–¢–û–ß–ù–û –î–ï–ù–ï–ì, –ù–ï–õ–¨–ó–Ø –ö–£–ü–ò–¢–¨ –ü–†–ï–î–ú–ï–¢ (–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–≤–æ–¥–∏—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∏–ø–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥ + –¥–∏–∑–µ–π–±–∏—Ç—å –∫–Ω–æ–ø–∫—É.)

    def __init__(self, player: User, items):
        self.player: User = player
        self.items: list = items
        self.current_shop_items = self.random_three_items()
        self.current_shop_items_bought = [False, False, False]

    def random_three_items(self):
        #  —á–µ–º –±–æ–ª—å—à–µ —Ä–µ–¥–∫–æ—Å—Ç—å, —Ç–µ–º –º–µ–Ω—å—à–µ —à–∞–Ω—Å
        weights = [max(1, 11 - item["rarity"]) for item in self.items]

        random_items = random.choices(self.items, weights=weights, k=3)

        for item in random_items:
            print(f"{item['name']} (—Ä–µ–¥–∫–æ—Å—Ç—å: {item['rarity']})")

        return random_items

    async def add_item_to_user(self, item_id: int, index):
        self.current_shop_items_bought[index] = True
        query = """
        SELECT quantity FROM user_items
        WHERE user_id = ? AND item_id = ?
        """
        result = await db.fetch_one(query, (self.player.id, item_id))

        if result:
            update_query = """
            UPDATE user_items
            SET quantity = quantity + 1
            WHERE user_id = ? AND item_id = ?
            """
            await db.execute_query(update_query, (self.player.id, item_id))
        else:
            insert_query = """
            INSERT INTO user_items (user_id, item_id, quantity)
            VALUES (?, ?, 1)
            """
            await db.execute_query(insert_query, (self.player.id, item_id))

    def create_embed_shop(self):
        greetings = "‚òÑÔ∏è–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, —Å—Ç—Ä–∞–Ω–Ω–∏–∫! –ñ–µ–ª–∞–µ—à—å –ø—Ä–∏–∫—É–ø–∏—Ç—å –º–æ–∏—Ö –±–µ–∑–¥–µ–ª—É—à–µ–∫?‚òÑÔ∏è\n\u200b"

        embed = Embed(
            title="–ü—Ä–∏–ª–∞–≤–∫–∞ –î–∂–æ",
            description=greetings,
            color=Colour.yellow())

        for index, item in enumerate(self.current_shop_items):
            rarity_stars = "‚≠ê" * math.ceil(item["rarity"] / 2)
            is_last = index == len(self.current_shop_items) - 1
            value = (
                f"\nüíé–¶–µ–Ω–∞: {item['cost']} –∑–æ–ª–æ—Ç–∞\n"
                f"üí™–û–ø–∏—Å–∞–Ω–∏–µ: {item['description']}"
            )
            if not is_last:
                value += "\n\u200b"

            embed.add_field(
                name=f"{item['name']} {rarity_stars}",
                value=value if not self.current_shop_items_bought[index] else "–ö–£–ü–õ–ï–ù–û",
                inline=False
            )
        return embed
